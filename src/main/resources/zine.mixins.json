{
  "required": true,
  "minVersion": "0.8",
  "package": "com.eightsidedsquare.zine.mixin",
  "compatibilityLevel": "JAVA_21",
  "mixins": [
    "EnchantmentBuilderMixin",
    "EntityEffectPredicateMixin",
    "FeaturePoolElementMixin",
    "ItemMixin",
    "ListPoolElementMixin",
    "RuleStructureProcessorMixin",
    "ServerAdvancementLoaderMixin",
    "SinglePoolElementMixin",
    "StructurePoolMixin",
    "StructureProcessorListMixin",
    "StructureProcessorRuleMixin",
    "advancement.AdvancementDisplayMixin",
    "advancement.AdvancementMixin",
    "advancement.AdvancementRequirementsMixin",
    "advancement.AdvancementRewardsMixin",
    "criterion.BeeNestDestroyedCriterionConditionsMixin",
    "criterion.BlockCriterionConditionsMixin",
    "criterion.BredAnimalsCriterionConditionsMixin",
    "criterion.BrewedPotionCriterionConditionsMixin",
    "criterion.ChangedDimensionCriterionConditionsMixin",
    "criterion.ConstructBeaconCriterionConditionsMixin",
    "criterion.CuredZombieVillagerCriterionConditionsMixin",
    "criterion.DamageCriterionConditionsMixin",
    "criterion.DistanceCriterionConditionsMixin",
    "criterion.EffectsChangedCriterionConditionsMixin",
    "criterion.EnchantedItemCriterionConditionsMixin",
    "criterion.EntityCriterionConditionsMixin",
    "criterion.FallAfterExplosionCriterionConditionsMixin",
    "criterion.FishingRodHookedCriterionConditions",
    "criterion.InventoryChangedCriterionConditionsMixin",
    "criterion.ItemCriterionConditionsMixin",
    "criterion.ItemDurabilityChangedCriterionConditionsMixin",
    "criterion.KilledByArrowCriterionConditionsMixin",
    "criterion.LevitationCriterionConditionsMixin",
    "criterion.LightningStrikeCriterionConditionsMixin",
    "criterion.LocationCriterionConditionsMixin",
    "criterion.OnKilledCriterionConditionsMixin",
    "criterion.PlayerCriterionConditionsMixin",
    "criterion.PlayerGeneratesContainerLootCriterionConditionsMixin",
    "criterion.RecipeCraftedCriterionConditionsMixin",
    "criterion.RecipeUnlockedCriterionConditionsMixin",
    "criterion.StartPositionCriterionConditionsMixin",
    "criterion.StateCriterionConditionsMixin",
    "criterion.TargetHitCriterionConditionsMixin",
    "criterion.UsedEnderEyeCriterionConditionsMixin",
    "criterion.VictimsCriterionConditionsMixin",
    "criterion.VillagerCriterionConditionsMixin",
    "entity.spawn.BiomeSpawnConditionMixin",
    "entity.spawn.MoonBrightnessSpawnConditionMixin",
    "entity.spawn.StructureSpawnConditionMixin",
    "entity.variant.AssetInfoMixin",
    "entity.variant.ModelAndTextureMixin",
    "predicate.BlockPredicateMixin",
    "predicate.ComponentMapPredicateMixin",
    "predicate.ComponentsPredicateMixin",
    "predicate.DamagePredicateMixin",
    "predicate.DamageSourcePredicateMixin",
    "predicate.DistancePredicateMixin",
    "predicate.EntityEquipmentPredicateMixin",
    "predicate.EntityFlagsPredicateMixin",
    "predicate.EntityPredicateMixin",
    "predicate.EntityPredicatePositionalPredicatesMixin",
    "predicate.EntityTypePredicateMixin",
    "predicate.FluidPredicateMixin",
    "predicate.ItemPredicateMixin",
    "predicate.LightPredicateMixin",
    "predicate.LocationPredicateMixin",
    "predicate.LootContextPredicateMixin",
    "predicate.MovementPredicateMixin",
    "predicate.NbtPredicateMixin",
    "predicate.SlotsPredicateMixin"
  ],
  "client": [
    "client.AtlasLoaderMixin",
    "client.BakedModelManagerMixin",
    "client.EntityRendererMixin",
    "client.EntityRenderStateMixin",
    "client.NativeImageMixin",
    "client.PalettedPermutationsAtlasSourceMixin",
    "client.ShaderProgramMixin",
    "client.TranslationStorageMixin",
    "client.TrimSpriteKeyMixin",
    "client.item.ItemAssetsLoaderMixin",
    "client.item.UnbakedBasicItemModelMixin",
    "client.item.UnbakedCompositeItemModelMixin",
    "client.item.UnbakedConditionItemModelMixin",
    "client.item.UnbakedRangeDispatchItemModelMixin",
    "client.item.UnbakedSelectItemModelMixin",
    "client.item.UnbakedSpecialItemModelMixin",
    "client.item.tint.ConstantTintSourceMixin",
    "client.item.tint.CustomModelDataTintSourceMixin",
    "client.item.tint.DyeTintSourceMixin",
    "client.item.tint.FireworkTintSourceMixin",
    "client.item.tint.GrassTintSourceMixin",
    "client.item.tint.MapColorTintSourceMixin",
    "client.item.tint.PotionTintSourceMixin",
    "client.item.tint.TeamTintSourceMixin"
  ],
  "injectors": {
    "defaultRequire": 1
  }
}
