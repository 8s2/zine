plugins {
    id 'fabric-loom' version '1.10-SNAPSHOT'
    id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

sourceSets {
    testmod {
        compileClasspath += main.compileClasspath
        runtimeClasspath += main.runtimeClasspath
        resources {
            srcDirs += [
                    'src/testmod/generated'
            ]
        }
    }
}

base {
    archivesName = project.archives_base_name
}

loom {
    accessWidenerPath = file("src/main/resources/zine.accesswidener")
    runs {
        testmodClient {
            client()
            name = "Testmod Client"
            source project.sourceSets.testmod
        }
    }
    mods {
        'zine' {
            sourceSet('main')
        }
        'zinetest' {
            sourceSet('testmod')
        }
    }

}

fabricApi {
    configureDataGeneration {
        client = true
        outputDirectory = file("src/testmod/generated")
        addToResources = false
        strictValidation = false
    }
}

runDatagen {
    outputs.dir("src/testmod/generated")
}

repositories {
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    afterEvaluate {
        testmodImplementation sourceSets.main.output
    }
}

processResources {
    inputs.property "version", project.version
    inputs.property "minecraft_version", project.minecraft_version
    inputs.property "loader_version", project.loader_version
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand "version": project.version,
                "minecraft_version": project.minecraft_version,
                "loader_version": project.loader_version,
                "class_198": "\$class_198",
                "class_1793": "\$class_1793",
                "class_1998": "\$class_1998",
                "class_2001": "\$class_2001",
                "class_2004": "\$class_2004",
                "class_2008": "\$class_2008",
                "class_2012": "\$class_2012",
                "class_2016": "\$class_2016",
                "class_2029": "\$class_2029",
                "class_2032": "\$class_2032",
                "class_2046": "\$class_2046",
                "class_2056": "\$class_2056",
                "class_2060": "\$class_2060",
                "class_2039": "\$class_2039",
                "class_2068": "\$class_2068",
                "class_2071": "\$class_2071",
                "class_2078": "\$class_2078",
                "class_2083": "\$class_2083",
                "class_2087": "\$class_2087",
                "class_2110": "\$class_2110",
                "class_2117": "\$class_2117",
                "class_2121": "\$class_2121",
                "class_2125": "\$class_2125",
                "class_2130": "\$class_2130",
                "class_2133": "\$class_2133",
                "class_2137": "\$class_2137",
                "class_2142": "\$class_2142",
                "class_2145": "\$class_2145",
                "class_2150": "\$class_2150",
                "class_4709": "\$class_4709",
                "class_4712": "\$class_4712",
                "class_4714": "\$class_4714",
                "class_4852": "\$class_4852",
                "class_5232": "\$class_5232",
                "class_5280": "\$class_5280",
                "class_5283": "\$class_5283",
                "class_5410": "\$class_5410",
                "class_6406": "\$class_6406",
                "class_6408": "\$class_6408",
                "class_6410": "\$class_6410",
                "class_8509": "\$class_8509",
                "class_9105": "\$class_9105",
                "class_9108": "\$class_9108",
                "class_9324": "\$class_9324",
                "class_9422": "\$class_9422",
                "class_9700": "\$class_9700",
                "class_9777": "\$class_9777",
                "class_10364": "\$class_10364",
                "class_10431": "\$class_10431",
                "class_10436": "\$class_10436",
                "class_10438": "\$class_10438",
                "class_10446": "\$class_10446",
                "class_10450": "\$class_10450",
                "class_10453": "\$class_10453",
                "class_10456": "\$class_10456",
                "class_10688": "\$class_10688"
    }
}

def targetJavaVersion = 21
tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        it.options.release.set(targetJavaVersion)
    }
}

java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}

publishing {
    publications {
        create("mavenJava", MavenPublication) {
            artifactId = project.archives_base_name
            from components.java
        }
    }
    repositories {
    }
}
